
public class h {

	    // Recursive function to solve Tower of Hanoi with four pegs
	    public static void solveTowerOfHanoi(int n, char source, char auxiliary1, char auxiliary2, char destination) {
	        if (n == 0) {
	            return;
	        }

	        if (n == 1) {
	            System.out.println("Move disk 1 from " + source + " to " + destination);
	            return;
	        }

	        // Move n-2 disks from source to auxiliary2 using auxiliary1 and destination
	        solveTowerOfHanoi(n - 2, source, destination, auxiliary2, auxiliary1);

	        // Move the n-1 disk from source to auxiliary1
	        System.out.println("Move disk " + (n - 1) + " from " + source + " to " + auxiliary2);
	        
	        // Move the nth disk from source to destination
	        System.out.println("Move disk " + n + " from " + source + " to " + destination);
	        
	        // Move the n-1 disk from auxiliary2 to destination
	        System.out.println("Move disk " + (n - 1) + " from " + auxiliary2 + " to " + destination);
	        
	        // Move the n-2 disks from auxiliary1 to destination using source and auxiliary2
	        solveTowerOfHanoi(n - 2, auxiliary1, source, auxiliary2, destination);
	    }

	    public static void main(String[] args) {
	        int n = 4; // Number of disks
	        solveTowerOfHanoi(n, 'A', 'B', 'C', 'D');
	    }
	}



